pipeline {
 agent {
    kubernetes {
      cloud 'openshift'
      yaml """
        apiVersion: v1
        kind: Pod
        spec:
          serviceAccountName: jenkins-agent
          containers:
          - name:  ocpcli
            image: nebbog/ocpcli:1.0.0
            command:
            - cat
            tty: true
          - name: builder
            image: nebbog/builder:1.7.0
            command:
            - cat
            tty: true
            volumeMounts:
            - name: home-volume
              mountPath: /home/jenkins
            env:
            - name: HOME
              value: /home/jenkins
          volumes:
          - name: home-volume
            emptyDir: {}
       """
    }
  }

  stages {
 
   stage('Build Java project - demo-app') {
     steps{
       container('builder') {
         script {
           sh 'cd ci-cd;./build.sh'
         }
       }
     }
   }

  stage('Preparing demo-app for docker image') {
    steps{
      container('builder') {
        sh 'cd ci-cd/docker;./prepare-app-for-image.sh'
      }
    }
  }
  stage('Build image using buildconfigs: my-demo-app-image') {
    steps{
      container('ocpcli') {
        sh 'which oc;oc version'
        sh 'cd ci-cd/docker;./make-image.sh'
      }
    }
  }

  stage('Deploying to openshift cluster') {
     steps{
       container('ocpcli') {
         script {
            sh 'curl -LO https://get.helm.sh/helm-v3.15.3-linux-amd64.tar.gz'
            sh 'tar -zxvf helm-v3.15.3-linux-amd64.tar.gz;cp linux-amd64/helm /tmp'
            sh '/tmp/helm version'
            sh 'cd ci-cd/k8s;./deploy.sh'
         }
       }
     }
   }

   
 }
}
